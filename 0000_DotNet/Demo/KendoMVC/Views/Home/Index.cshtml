@using KendoMVC.Models.Entities;

@model Role
@{
    ViewBag.Title = "TBA";
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>
                To learn more about ASP.NET MVC visit
                <a href="http://asp.net/mvc" title="ASP.NET MVC Website">http://asp.net/mvc</a>.
                The page features <mark>videos, tutorials, and samples</mark> to help you get the most from ASP.NET MVC.
                If you have any questions about ASP.NET MVC visit
                <a href="http://forums.asp.net/1146.aspx/1?MVC" title="ASP.NET MVC Forum">our forums</a>.
            </p>

            <h3>Kendo Demo</h3>
            @(Html.Kendo().DatePicker().Name("BDay"))

            @(Html.Kendo().DropDownListFor(role => role.Number)
              .OptionLabel("--------")
              .DataTextField("RoleName")
              .DataValueField("Number")
              .DataSource(dataSource => dataSource
                  .Read(read => read.Action("GetRoles", "Home"))
                  .ServerFiltering(true)
              )
              //.BindTo(new List<SelectListItem>() {
              //    new SelectListItem() {
              //        Text  = "Black",
              //        Value  = "1"
              //    },
              //    new SelectListItem() {
              //        Text  = "Orange",
              //        Value  = "2"
              //    },
              //    new SelectListItem() {
              //        Text  = "Grey",
              //        Value  = "3"
              //    }
              //})
              //.DataSource(dataSource => dataSource
              //    .Read(read => read.Action("GetRoles", "Publishing"))
              //    .ServerFiltering(true)
              //)
              //.Events(e => e
              //    .Select("listUsersView.RoleDropDownList_Select")
              //    .Change("listUsersView.RoleDropDownList_Change")
              //)
              .Events(e =>
              {
                e.Change("onChange")
                    .Select("onSelect")
                    .Open("onOpen")
                    .Close("onClose")
                    .DataBound("onDataBound");
                    //.Filtering("onFiltering");
              })
              .SelectedIndex(0))

        </div>
    </section>
}
<h3>We suggest the following:</h3>
<ol class="round">
    <li class="one">
        <h5>Getting Started</h5>
        ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
        enables a clean separation of concerns and that gives you full control over markup
        for enjoyable, agile development. ASP.NET MVC includes many features that enable
        fast, TDD-friendly development for creating sophisticated applications that use
        the latest web standards.
        <a href="http://go.microsoft.com/fwlink/?LinkId=245151">Learn more…</a>
    </li>

    <li class="two">
        <h5>Add NuGet packages and jump-start your coding</h5>
        NuGet makes it easy to install and update free libraries and tools.
        <a href="http://go.microsoft.com/fwlink/?LinkId=245153">Learn more…</a>
    </li>

    <li class="three">
        <h5>Find Web Hosting</h5>
        You can easily find a web hosting company that offers the right mix of features
        and price for your applications.
        <a href="http://go.microsoft.com/fwlink/?LinkId=245157">Learn more…</a>
    </li>
</ol>

<script>
    function onOpen() {
       // Console.log("event: open");
    }

    function onClose() {
        //Console.log("event: close");
    }

    function onChange() {
        //Console.log("event: change");
    }

    function onDataBound() {
        //Console.log("event: dataBound");
    }

    function onFiltering() {
       // Console.log("event: filtering");
    }

    function onSelect(e) {
        if ("kendoConsole" in window) {
            var dataItem = this.dataItem(e.item);
            //Console.log("event :: select (" + dataItem.Text + " : " + dataItem.Value + ")");
        }
    }
</script>